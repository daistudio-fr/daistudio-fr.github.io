{"id":"sCQd","dependencies":[{"name":"/Users/daistudio/Documents/daistudio/GIT/daistudio-fr.github.io/package.json","includedInParent":true,"mtime":1612520536386}],"generated":{"js":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nvarying vec2 vUv;\\nuniform float progress;\\nuniform float direction;\\nuniform vec2 mouse;\\nuniform float alpha;\\nvarying float vAlpha;\\nvarying vec4 vPosition;\\nuniform vec2 pixels;\\nfloat PI = 3.141592653589793238;\\nuniform float distanceFromCenter;\\n\\nvoid main(){\\n    vUv = (uv - vec2(0.5))*(0.9 - 0.2*distanceFromCenter*(2. - distanceFromCenter)) + vec2(0.5);\\n    \\n    vAlpha = alpha;\\n    vec3 pos = position;\\n    // float distance = length(uv - vec2(0.5));\\n    // float maxdist = length(vec2(0.5));\\n\\n    float distance = length(uv - vec2(0.5, 0.7));\\n\\n    float maxdist = length(mouse);\\n\\n    float normalizeDistance = distance/maxdist;\\n\\n    float stickTo = normalizeDistance;\\n\\n    float stickOut = -normalizeDistance;\\n\\n    float stickEffect = mix(stickTo, stickOut, direction);\\n\\n    float mySuperDupahProgress = min(2.*progress, 2.*(1. - progress));\\n\\n    float zOffset = 2.;\\n\\n    float zProgress = (mix(clamp(2.*progress, 0., 1.),clamp(1. - 2.*(1. -progress), 0., 1.), direction));\\n\\n    pos.z += zOffset*(stickEffect*mySuperDupahProgress - zProgress) ;\\n\\n    pos.z += progress*sin(distance*10. + time )*0.05;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\\n}\";"},"sourceMaps":{"js":{"mappings":[{"source":"js/shader/vertex.glsl","name":"module","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"js/shader/vertex.glsl","name":"exports","original":{"line":1,"column":7},"generated":{"line":1,"column":7}},{"source":"js/shader/vertex.glsl","original":{"line":1,"column":15},"generated":{"line":1,"column":15}}],"sources":{"js/shader/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nvarying vec2 vUv;\\nuniform float progress;\\nuniform float direction;\\nuniform vec2 mouse;\\nuniform float alpha;\\nvarying float vAlpha;\\nvarying vec4 vPosition;\\nuniform vec2 pixels;\\nfloat PI = 3.141592653589793238;\\nuniform float distanceFromCenter;\\n\\nvoid main(){\\n    vUv = (uv - vec2(0.5))*(0.9 - 0.2*distanceFromCenter*(2. - distanceFromCenter)) + vec2(0.5);\\n    \\n    vAlpha = alpha;\\n    vec3 pos = position;\\n    // float distance = length(uv - vec2(0.5));\\n    // float maxdist = length(vec2(0.5));\\n\\n    float distance = length(uv - vec2(0.5, 0.7));\\n\\n    float maxdist = length(mouse);\\n\\n    float normalizeDistance = distance/maxdist;\\n\\n    float stickTo = normalizeDistance;\\n\\n    float stickOut = -normalizeDistance;\\n\\n    float stickEffect = mix(stickTo, stickOut, direction);\\n\\n    float mySuperDupahProgress = min(2.*progress, 2.*(1. - progress));\\n\\n    float zOffset = 2.;\\n\\n    float zProgress = (mix(clamp(2.*progress, 0., 1.),clamp(1. - 2.*(1. -progress), 0., 1.), direction));\\n\\n    pos.z += zOffset*(stickEffect*mySuperDupahProgress - zProgress) ;\\n\\n    pos.z += progress*sin(distance*10. + time )*0.05;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\\n}\";"},"lineCount":null}},"error":null,"hash":"8f50aa203eeca7b4ed66b7eb60d6905f","cacheData":{"env":{}}}