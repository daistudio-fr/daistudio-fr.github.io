{"id":"js/shader/fragment.glsl","dependencies":[{"name":"/Users/daistudio/Documents/daistudio/GIT/daistudio-fr.github.io/package.json","includedInParent":true,"mtime":1612522837825}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform float distanceFromCenter;\\nuniform vec2 mouse;\\nuniform sampler2D texture1;\\nuniform sampler2D texture2;\\nvarying float vAlpha;\\nuniform vec4 resolution;\\nvarying vec2 vUv;\\nuniform vec2 imageResolution;\\nvarying vec4 vPosition;\\n\\nvoid main(){\\n   \\n    vec2 ratio = vec2(\\n        min((resolution.x / resolution.y) / (imageResolution.x / imageResolution.y), 1.0),\\n        min((resolution.y / resolution.x) / (imageResolution.y / imageResolution.x), 1.0)\\n        );\\n    vec2 EverUv = vec2(\\n        vUv.x * ratio.x + (1.0 - ratio.x) * 0.5,\\n        vUv.y * ratio.y + (1.0 - ratio.y) * 0.5\\n    );\\n\\n    vec4 t = texture2D(texture1, EverUv);\\n    float bw = (t.r + t.b + t.g)/3.;\\n    vec4 another = vec4(bw, bw, bw, 1.);\\n    gl_FragColor = vec4(vUv,1., 0.);\\n    gl_FragColor = mix(another, t, distanceFromCenter);\\n    //gl_FragColor = vec4(vUv, 1., 1.);\\n    gl_FragColor.a = clamp(distanceFromCenter, 0.6, vAlpha);\\n\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shader/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shader/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shader/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":1020},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"js/shader/fragment.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform float distanceFromCenter;\\nuniform vec2 mouse;\\nuniform sampler2D texture1;\\nuniform sampler2D texture2;\\nvarying float vAlpha;\\nuniform vec4 resolution;\\nvarying vec2 vUv;\\nuniform vec2 imageResolution;\\nvarying vec4 vPosition;\\n\\nvoid main(){\\n   \\n    vec2 ratio = vec2(\\n        min((resolution.x / resolution.y) / (imageResolution.x / imageResolution.y), 1.0),\\n        min((resolution.y / resolution.x) / (imageResolution.y / imageResolution.x), 1.0)\\n        );\\n    vec2 EverUv = vec2(\\n        vUv.x * ratio.x + (1.0 - ratio.x) * 0.5,\\n        vUv.y * ratio.y + (1.0 - ratio.y) * 0.5\\n    );\\n\\n    vec4 t = texture2D(texture1, EverUv);\\n    float bw = (t.r + t.b + t.g)/3.;\\n    vec4 another = vec4(bw, bw, bw, 1.);\\n    gl_FragColor = vec4(vUv,1., 0.);\\n    gl_FragColor = mix(another, t, distanceFromCenter);\\n    //gl_FragColor = vec4(vUv, 1., 1.);\\n    gl_FragColor.a = clamp(distanceFromCenter, 0.6, vAlpha);\\n\\n}\";"},"lineCount":null}},"error":null,"hash":"d9267423131a1c3f03bd4a581586a10d","cacheData":{"env":{}}}